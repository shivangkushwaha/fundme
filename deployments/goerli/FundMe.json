{
  "address": "0xD9a9e47569e54856652ABcd4E157ccC2330Cc7Be",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe_notOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheparWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAdressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "widraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xf9355f4b66b94d5a35010b8593fdf7d3182fca461b8d2ed6aa0a92da267fbaaa",
  "receipt": {
    "to": null,
    "from": "0x98bF20138d01e1F59092246B773d0F04A36EE76a",
    "contractAddress": "0xD9a9e47569e54856652ABcd4E157ccC2330Cc7Be",
    "transactionIndex": 140,
    "gasUsed": "1048624",
    "logsBloom": "0x
    "blockHash": "0x15d553eecad06e3c3f53b4fc6bc28da8e534c310c2a09dd0571706fb221f2199",
    "transactionHash": "0xf9355f4b66b94d5a35010b8593fdf7d3182fca461b8d2ed6aa0a92da267fbaaa",
    "logs": [],
    "blockNumber": 8065847,
    "cumulativeGasUsed": "26311572",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 3,
  "solcInputHash": "1c57c9cd515bb0bc07a7f4a13c493e6e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_notOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheparWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAdressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"widraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Shivang Kushwaha\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A COntract For crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is demon\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.17;\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n// Error Codes\\r\\nerror FundMe_notOwner();\\r\\n\\r\\n//Interfaces Lib\\r\\n// Contract\\r\\n\\r\\n/** @title A COntract For crowd funding\\r\\n * @author Shivang Kushwaha\\r\\n * @notice This contract is demon\\r\\n * @dev This implements price feeds as our library\\r\\n */\\r\\ncontract FundMe {\\r\\n    // type declartion\\r\\n    using PriceConverter for uint256;\\r\\n    // state Variable\\r\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\r\\n    address[] public s_funders;\\r\\n    mapping(address => uint256) private s_addressToAmountFunder;\\r\\n    address private immutable i_owner;\\r\\n    AggregatorV3Interface private s_priceFeed;\\r\\n\\r\\n    //Modifier\\r\\n    // Declaring modifire for sending all Data with Only modifire\\r\\n    modifier onlyowner() {\\r\\n        // require(msg.sender==i_owner,\\\"You are not authrized to take this action.\\\");\\r\\n        if (msg.sender != i_owner) {\\r\\n            revert FundMe_notOwner();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // contructor\\r\\n    constructor(address priceFeedAddress) {\\r\\n        i_owner = msg.sender;\\r\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice The Function Fund This Contract\\r\\n     * @dev Accepts Money\\r\\n     */\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    function fund() public payable {\\r\\n        require(\\r\\n            msg.value.getConversionRate(s_priceFeed) > MINIMUM_USD,\\r\\n            \\\"You are not eligible yet for donate minimum amount of fund....\\\"\\r\\n        );\\r\\n        s_funders.push(msg.sender);\\r\\n        s_addressToAmountFunder[msg.sender] = msg.value;\\r\\n    }\\r\\n\\r\\n    function widraw() public onlyowner {\\r\\n        for (uint256 i = 0; i < s_funders.length; i = i + 1) {\\r\\n            // Reset all s_funders Array Valu or Array---------------\\r\\n            s_addressToAmountFunder[s_funders[i]] = 0;\\r\\n        }\\r\\n        // Reset array---------------------\\r\\n        s_funders = new address[](0);\\r\\n        // transfer Method\\r\\n        // change msg.sender to payblre type\\r\\n        payable(msg.sender).transfer(address(this).balance);\\r\\n        //send\\r\\n        bool sucess = payable(msg.sender).send(address(this).balance);\\r\\n        require(sucess, \\\"Transfer Failed......\\\");\\r\\n        // call function\\r\\n        (bool callsucess, ) = payable(msg.sender).call{\\r\\n            value: address(this).balance\\r\\n        }(\\\"\\\");\\r\\n        require(callsucess, \\\"Transfer Failed......\\\");\\r\\n    }\\r\\n\\r\\n    function cheparWithdraw() public payable onlyowner {\\r\\n        address[] memory m_funders = s_funders;\\r\\n\\r\\n        for (uint256 i = 0; i < m_funders.length; i = i + 1) {\\r\\n            // Reset all s_funders Array Valu or Array---------------\\r\\n            s_addressToAmountFunder[m_funders[i]] = 0;\\r\\n        }\\r\\n        s_funders = new address[](0);\\r\\n        (bool callsucess, ) = payable(msg.sender).call{\\r\\n            value: address(this).balance\\r\\n        }(\\\"\\\");\\r\\n        require(callsucess, \\\"Transfer Failed......\\\");\\r\\n    }\\r\\n\\r\\n    function getOwner() public view returns (address) {\\r\\n        return i_owner;\\r\\n    }\\r\\n\\r\\n    function getFunder(uint index) public view returns (address) {\\r\\n        return s_funders[index];\\r\\n    }\\r\\n\\r\\n    function getAdressToAmountFunded(\\r\\n        address funder\\r\\n    ) public view returns (uint256) {\\r\\n        return s_addressToAmountFunder[funder];\\r\\n    }\\r\\n\\r\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\r\\n        return s_priceFeed;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x6ba1d985e7713880f7c9fd899097b16e02a9482853bdc5d5bcadacf7a1bf6e43\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.17;\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(\\r\\n        AggregatorV3Interface priceFee\\r\\n    ) internal view returns (uint256) {\\r\\n        // API\\r\\n        // Address :- 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\r\\n        //AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e).version();\\r\\n        // AggregatorV3Interface priceFee = AggregatorV3Interface(\\r\\n        //     0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\r\\n        // );\\r\\n        (, int256 price, , , ) = priceFee.latestRoundData();\\r\\n        return uint256(price * 1e10); //1**10=1000000000000\\r\\n    }\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint256 ethamount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint ethAmountInUsd = (ethPrice * ethamount) / 1e18;\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xd9128d4c305bdd5ef0ebef45a866efcbdb75f37c8c327cd4fa988ef5324f53f3\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620013133803806200131383398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b60805161119a620001796000396000818161036f0152818161061d01526106b6015261119a6000f3fe60806040526004361061008a5760003560e01c80639a59cd9e116100595780639a59cd9e146101405780639e87a5cd1461017d578063b60d4288146101a8578063b77745ea146101b2578063d7b4750c146101c957610099565b806354861af7146100a35780635b41680e146100e05780636b69a592146100ea578063893d20e81461011557610099565b3661009957610097610206565b005b6100a1610206565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610ba6565b61032e565b6040516100d79190610c14565b60405180910390f35b6100e861036d565b005b3480156100f657600080fd5b506100ff61060c565b60405161010c9190610c3e565b60405180910390f35b34801561012157600080fd5b5061012a610619565b6040516101379190610c14565b60405180910390f35b34801561014c57600080fd5b5061016760048036038101906101629190610c85565b610641565b6040516101749190610c3e565b60405180910390f35b34801561018957600080fd5b5061019261068a565b60405161019f9190610d11565b60405180910390f35b6101b0610206565b005b3480156101be57600080fd5b506101c76106b4565b005b3480156101d557600080fd5b506101f060048036038101906101eb9190610ba6565b6109b0565b6040516101fd9190610c14565b60405180910390f35b6802b5e3af16b1880000610245600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346109f790919063ffffffff16565b11610285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027c90610daf565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000818154811061033e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f2576040517fd72551ca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561047557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161042b575b5050505050905060005b81518110156104fb576000600160008484815181106104a1576104a0610dcf565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001816104f49190610e2d565b905061047f565b50600067ffffffffffffffff81111561051757610516610e61565b5b6040519080825280602002602001820160405280156105455781602001602082028036833780820191505090505b506000908051906020019061055b929190610ac4565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161058290610ec1565b60006040518083038185875af1925050503d80600081146105bf576040519150601f19603f3d011682016040523d82523d6000602084013e6105c4565b606091505b5050905080610608576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ff90610f22565b60405180910390fd5b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610739576040517fd72551ca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156107df5760006001600080848154811061076257610761610dcf565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001816107d89190610e2d565b905061073c565b50600067ffffffffffffffff8111156107fb576107fa610e61565b5b6040519080825280602002602001820160405280156108295781602001602082028036833780820191505090505b506000908051906020019061083f929190610ac4565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610886573d6000803e3d6000fd5b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050905080610900576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f790610f22565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161092690610ec1565b60006040518083038185875af1925050503d8060008114610963576040519150601f19603f3d011682016040523d82523d6000602084013e610968565b606091505b50509050806109ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a390610f22565b60405180910390fd5b5050565b60008082815481106109c5576109c4610dcf565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610a0383610a33565b90506000670de0b6b3a76400008583610a1c9190610f42565b610a269190610fb3565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610a81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa59190611071565b5050509150506402540be40081610abc91906110ec565b915050919050565b828054828255906000526020600020908101928215610b3d579160200282015b82811115610b3c5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610ae4565b5b509050610b4a9190610b4e565b5090565b5b80821115610b67576000816000905550600101610b4f565b5090565b600080fd5b6000819050919050565b610b8381610b70565b8114610b8e57600080fd5b50565b600081359050610ba081610b7a565b92915050565b600060208284031215610bbc57610bbb610b6b565b5b6000610bca84828501610b91565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bfe82610bd3565b9050919050565b610c0e81610bf3565b82525050565b6000602082019050610c296000830184610c05565b92915050565b610c3881610b70565b82525050565b6000602082019050610c536000830184610c2f565b92915050565b610c6281610bf3565b8114610c6d57600080fd5b50565b600081359050610c7f81610c59565b92915050565b600060208284031215610c9b57610c9a610b6b565b5b6000610ca984828501610c70565b91505092915050565b6000819050919050565b6000610cd7610cd2610ccd84610bd3565b610cb2565b610bd3565b9050919050565b6000610ce982610cbc565b9050919050565b6000610cfb82610cde565b9050919050565b610d0b81610cf0565b82525050565b6000602082019050610d266000830184610d02565b92915050565b600082825260208201905092915050565b7f596f7520617265206e6f7420656c696769626c652079657420666f7220646f6e60008201527f617465206d696e696d756d20616d6f756e74206f662066756e642e2e2e2e0000602082015250565b6000610d99603e83610d2c565b9150610da482610d3d565b604082019050919050565b60006020820190508181036000830152610dc881610d8c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e3882610b70565b9150610e4383610b70565b9250828201905080821115610e5b57610e5a610dfe565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610eab600083610e90565b9150610eb682610e9b565b600082019050919050565b6000610ecc82610e9e565b9150819050919050565b7f5472616e73666572204661696c65642e2e2e2e2e2e0000000000000000000000600082015250565b6000610f0c601583610d2c565b9150610f1782610ed6565b602082019050919050565b60006020820190508181036000830152610f3b81610eff565b9050919050565b6000610f4d82610b70565b9150610f5883610b70565b9250828202610f6681610b70565b91508282048414831517610f7d57610f7c610dfe565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fbe82610b70565b9150610fc983610b70565b925082610fd957610fd8610f84565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61100381610fe4565b811461100e57600080fd5b50565b60008151905061102081610ffa565b92915050565b6000819050919050565b61103981611026565b811461104457600080fd5b50565b60008151905061105681611030565b92915050565b60008151905061106b81610b7a565b92915050565b600080600080600060a0868803121561108d5761108c610b6b565b5b600061109b88828901611011565b95505060206110ac88828901611047565b94505060406110bd8882890161105c565b93505060606110ce8882890161105c565b92505060806110df88828901611011565b9150509295509295909350565b60006110f782611026565b915061110283611026565b925082820261111081611026565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561114857611147610dfe565b5b828205841483151761115d5761115c610dfe565b5b509291505056fea2646970667358221220fde0bc26cd7850ed1b3acf0adf1600894a6e8f590e8c81045092fbf8147e2a2564736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c80639a59cd9e116100595780639a59cd9e146101405780639e87a5cd1461017d578063b60d4288146101a8578063b77745ea146101b2578063d7b4750c146101c957610099565b806354861af7146100a35780635b41680e146100e05780636b69a592146100ea578063893d20e81461011557610099565b3661009957610097610206565b005b6100a1610206565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610ba6565b61032e565b6040516100d79190610c14565b60405180910390f35b6100e861036d565b005b3480156100f657600080fd5b506100ff61060c565b60405161010c9190610c3e565b60405180910390f35b34801561012157600080fd5b5061012a610619565b6040516101379190610c14565b60405180910390f35b34801561014c57600080fd5b5061016760048036038101906101629190610c85565b610641565b6040516101749190610c3e565b60405180910390f35b34801561018957600080fd5b5061019261068a565b60405161019f9190610d11565b60405180910390f35b6101b0610206565b005b3480156101be57600080fd5b506101c76106b4565b005b3480156101d557600080fd5b506101f060048036038101906101eb9190610ba6565b6109b0565b6040516101fd9190610c14565b60405180910390f35b6802b5e3af16b1880000610245600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346109f790919063ffffffff16565b11610285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027c90610daf565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000818154811061033e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f2576040517fd72551ca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561047557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161042b575b5050505050905060005b81518110156104fb576000600160008484815181106104a1576104a0610dcf565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001816104f49190610e2d565b905061047f565b50600067ffffffffffffffff81111561051757610516610e61565b5b6040519080825280602002602001820160405280156105455781602001602082028036833780820191505090505b506000908051906020019061055b929190610ac4565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161058290610ec1565b60006040518083038185875af1925050503d80600081146105bf576040519150601f19603f3d011682016040523d82523d6000602084013e6105c4565b606091505b5050905080610608576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ff90610f22565b60405180910390fd5b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610739576040517fd72551ca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156107df5760006001600080848154811061076257610761610dcf565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001816107d89190610e2d565b905061073c565b50600067ffffffffffffffff8111156107fb576107fa610e61565b5b6040519080825280602002602001820160405280156108295781602001602082028036833780820191505090505b506000908051906020019061083f929190610ac4565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610886573d6000803e3d6000fd5b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050905080610900576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f790610f22565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161092690610ec1565b60006040518083038185875af1925050503d8060008114610963576040519150601f19603f3d011682016040523d82523d6000602084013e610968565b606091505b50509050806109ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a390610f22565b60405180910390fd5b5050565b60008082815481106109c5576109c4610dcf565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610a0383610a33565b90506000670de0b6b3a76400008583610a1c9190610f42565b610a269190610fb3565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610a81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa59190611071565b5050509150506402540be40081610abc91906110ec565b915050919050565b828054828255906000526020600020908101928215610b3d579160200282015b82811115610b3c5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610ae4565b5b509050610b4a9190610b4e565b5090565b5b80821115610b67576000816000905550600101610b4f565b5090565b600080fd5b6000819050919050565b610b8381610b70565b8114610b8e57600080fd5b50565b600081359050610ba081610b7a565b92915050565b600060208284031215610bbc57610bbb610b6b565b5b6000610bca84828501610b91565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bfe82610bd3565b9050919050565b610c0e81610bf3565b82525050565b6000602082019050610c296000830184610c05565b92915050565b610c3881610b70565b82525050565b6000602082019050610c536000830184610c2f565b92915050565b610c6281610bf3565b8114610c6d57600080fd5b50565b600081359050610c7f81610c59565b92915050565b600060208284031215610c9b57610c9a610b6b565b5b6000610ca984828501610c70565b91505092915050565b6000819050919050565b6000610cd7610cd2610ccd84610bd3565b610cb2565b610bd3565b9050919050565b6000610ce982610cbc565b9050919050565b6000610cfb82610cde565b9050919050565b610d0b81610cf0565b82525050565b6000602082019050610d266000830184610d02565b92915050565b600082825260208201905092915050565b7f596f7520617265206e6f7420656c696769626c652079657420666f7220646f6e60008201527f617465206d696e696d756d20616d6f756e74206f662066756e642e2e2e2e0000602082015250565b6000610d99603e83610d2c565b9150610da482610d3d565b604082019050919050565b60006020820190508181036000830152610dc881610d8c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e3882610b70565b9150610e4383610b70565b9250828201905080821115610e5b57610e5a610dfe565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610eab600083610e90565b9150610eb682610e9b565b600082019050919050565b6000610ecc82610e9e565b9150819050919050565b7f5472616e73666572204661696c65642e2e2e2e2e2e0000000000000000000000600082015250565b6000610f0c601583610d2c565b9150610f1782610ed6565b602082019050919050565b60006020820190508181036000830152610f3b81610eff565b9050919050565b6000610f4d82610b70565b9150610f5883610b70565b9250828202610f6681610b70565b91508282048414831517610f7d57610f7c610dfe565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fbe82610b70565b9150610fc983610b70565b925082610fd957610fd8610f84565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61100381610fe4565b811461100e57600080fd5b50565b60008151905061102081610ffa565b92915050565b6000819050919050565b61103981611026565b811461104457600080fd5b50565b60008151905061105681611030565b92915050565b60008151905061106b81610b7a565b92915050565b600080600080600060a0868803121561108d5761108c610b6b565b5b600061109b88828901611011565b95505060206110ac88828901611047565b94505060406110bd8882890161105c565b93505060606110ce8882890161105c565b92505060806110df88828901611011565b9150509295509295909350565b60006110f782611026565b915061110283611026565b925082820261111081611026565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561114857611147610dfe565b5b828205841483151761115d5761115c610dfe565b5b509291505056fea2646970667358221220fde0bc26cd7850ed1b3acf0adf1600894a6e8f590e8c81045092fbf8147e2a2564736f6c63430008110033",
  "devdoc": {
    "author": "Shivang Kushwaha",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A COntract For crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is demon",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunder",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}